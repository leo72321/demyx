# 繁體中文語系自動產出 by scan-msg.sh
export DMSG_1="                          --date        指定要還原的備份日期。格式：YYYY-MM-DD（預設為今天）。"
export DMSG_2="                          -c            僅還原 app 的 compose.yml 和 .env 檔案（設定備份）。"
export DMSG_3="                          -c|-cf|-fc      檢視 app 的排程（cron）日誌（加 f 可即時追蹤）。"
export DMSG_4="                          -d            僅還原資料庫。若未找到 .sql 檔則使用最近的備份。"
export DMSG_5="                          -d|-df|-fd      檢視 app 的 MariaDB 日誌（加 f 可即時追蹤）。"
export DMSG_6="                          -e|-ef|-fe      檢視 app 的錯誤日誌（加 f 可即時追蹤）。"
export DMSG_7="                          -f              即時追蹤日誌輸出。"
export DMSG_8="                          -f            還原 app 時略過確認提示。"
export DMSG_9="                          -f          刪除並重新產生 app 中非機密的環境變數（介於 refreshable 標記間）。"
export DMSG_10="                          -fr         重新產生檔案及執行 docker compose up -d --force-recreate --remove-orphans。"
export DMSG_11="                          -nc         僅重新產生 compose.yml 和 .env 檔案，不執行任何 docker compose 指令。"
export DMSG_12="                          -s          在重新產生檔案前略過備份 app 設定。"
export DMSG_13="                          -s|-sf|-fs      檢視 app 的 Docker 日誌（加 f 可即時追蹤）。"
export DMSG_14="                      --env       搜尋特定的環境變數。（範例：--env=DEMYX_APP_STACK）"
export DMSG_15="                      -j          以 JSON 格式輸出結果。"
export DMSG_16="                      -l          顯示所有登入憑證：基本驗證、Code Server、OLS 管理後台（如適用）、MariaDB、WordPress。"
export DMSG_17="                      -nv         隱藏 DB 和 WP 容量資訊。"
export DMSG_18="                      -r              編輯後重新整理 app 的 compose.yml 和 .env 檔案，containers 將被重建。"
export DMSG_19="                      -r          顯示所有已安裝 app 的原始清單（不含標題，僅適用於 apps）。"
export DMSG_20="                    -d                                指定目標為 app 中的 MariaDB container（db_<id>）。"
export DMSG_21="                    -n                                指定目標為 app 中的 Nginx container（nx_<id>）。"
export DMSG_22="                    -w                                指定目標為 app 中的 WordPress container（wp_<id>）。"
export DMSG_23="                    all                               對所有 app 執行 docker compose 指令。"
export DMSG_24="                    down                              執行 docker compose stop 並強制 rm。"
export DMSG_25="                    fr                                執行 docker compose up -d --force-recreate --remove-orphans。"
export DMSG_26="                   --auth                             啟用或停用基本驗證（Basic Auth）。"
export DMSG_27="                   --auth-wp                          啟用或停用 WordPress 登入的基本驗證。"
export DMSG_28="                   --backup                           啟用或停用 app 備份功能。（用法：--backup=<true|false>）"
export DMSG_29="                   --bedrock                          將 Bedrock app 設定為 production 或 development 模式。（用法：--bedrock=<production|development>）"
export DMSG_30="                   --cache                            安裝並設定快取外掛，依 app 所屬堆疊而定。支援 rocket-nginx + WP Rocket（限 nginx-php stack）。（用法：--cache=<true|false|default|rocket>）"
export DMSG_31="                   --clean                            匯出/匯入資料庫並重設帳密，強制下載 WordPress 核心檔，並重設 salts。"
export DMSG_32="                   --convert                          將 container 與 volume 名稱轉換為新版格式。"
export DMSG_33="                   --db-cpu                           設定 DB 容器的 CPU 限制，--db-cpu=0 表示移除限制。（用法：--db-cpu=.50）"
export DMSG_34="                   --db-mem                           設定 DB 容器的記憶體限制，--db-mem=0 表示移除限制。（用法：--db-mem=256m）"
export DMSG_35="                   --dev                              建立 code-server 服務並執行數個 WordPress 相關指令。"
export DMSG_36="                   --healthcheck                      啟用或停用健康檢查。"
export DMSG_37="                   --maintenance                      啟用或停用維護模式。"
export DMSG_38="                   --no-compose                       執行設定後不自動執行 docker compose up -d。"
export DMSG_39="                   --opcache                          啟用或停用 PHP opcache 功能。"
export DMSG_40="                   --path             備份完成後移動檔案至自訂路徑。（用法：--path=/my/path）"
export DMSG_41="                   --php                              切換 PHP/LSPHP 版本。（用法：--php=<8.2|8.3>）"
export DMSG_42="                   --php-average                      設定 php-fpm 子行程平均記憶體（單位：KB）。（用法：--php-average=100000）"
export DMSG_43="                   --php-max-requests                 設定 php-fpm 子行程最多請求數。（用法：--php-max-requests=500）"
export DMSG_44="                   --pma                              啟用或停用 phpMyAdmin 服務。"
export DMSG_45="                   --rate-limit                       啟用或停用對 /wp-login.php 與 /wp-cron.php 的 Nginx 流量限制。"
export DMSG_46="                   --redis                            啟用或停用 Redis 服務，並依 App Stack 自動套用對應外掛。"
export DMSG_47="                   --sftp                             啟用或停用 SFTP 服務，自動從 2222 開始掃描開放的 port。"
export DMSG_48="                   --ssl                              啟用或停用 HTTPS，並使用 wp-cli 對資料庫執行網址替換。"
export DMSG_49="                   --ssl-wildcard                     啟用或停用 wildcard SSL，並使用 wp-cli 對資料庫執行網址替換。"
export DMSG_50="                   --stack                            切換堆疊類型：Nginx/PHP 和 OpenLiteSpeed 間切換，但無法直接切換到 Bedrock 或在 OLS 間切換至 Bedrock。（用法：--stack=<bedrock|nginx-php|ols|ols-bedrock>）"
export DMSG_51="                   --whitelist                        啟用/停用整站或僅登入頁的 IP 白名單功能。必須先透過 demyx host edit 設定 DEMYX_IP。（用法：--whitelist=<all|login>）"
export DMSG_52="                   --wp-cpu                           設定 WP 容器的 CPU 限制，--wp-cpu=0 表示取消限制。（用法：--wp-cpu=.50）"
export DMSG_53="                   --wp-mem                           設定 WP 容器的記憶體限制，--wp-mem=0 表示取消限制。（用法：--wp-mem=256m）"
export DMSG_54="                   --wp-update                        啟用/停用 wp-cli 的 WordPress 自動更新。會自動更新核心、外掛及佈景主題。"
export DMSG_55="                   --www                              啟用/停用網域的 www 子網域功能。"
export DMSG_56="                   --xmlrpc                           啟用/停用 /xmlrpc.php（會回傳 404），預設為停用。"
export DMSG_57="                   -c                 僅備份設定檔（compose.yml 和 .env）。"
export DMSG_58="                   -d                 僅備份資料庫。"
export DMSG_59="                   -f                                 跳過操作確認提示。"
export DMSG_60="                   -l                 顯示所有備份清單及檔案大小。"
export DMSG_61="                  顯示可執行於 MariaDB、Nginx（若有）、WordPress container 的指令。"
export DMSG_62="                 -d           在 MariaDB 容器中執行指令。未指定指令時會進入 bash 模式。"
export DMSG_63="                 -n           在 Nginx 容器中執行指令。未指定指令時會進入 bash 模式。"
export DMSG_64="                 -r           以 root 使用者執行指令（預設為 demyx 使用者）。"
export DMSG_65="                 -t           停用互動模式（僅限 TTY 執行）。"
export DMSG_66="                --auth                    啟用此 app 的基本認證（basic authentication）。"
export DMSG_67="                --cache                   啟用此 app 的快取功能。"
export DMSG_68="                --clone                   複製現有的 app。（用法：--clone=<app>）"
export DMSG_69="                --email                   設定自訂管理員 Email，預設為 info@DEMYX_DOMAIN。"
export DMSG_70="                --pass|--password         設定自訂管理員密碼。"
export DMSG_71="                --php                     設定 PHP 版本，預設為 8.3。（用法：--php=<8.2|8.3>）"
export DMSG_72="                --redis                   為此 app 啟用 Redis。"
export DMSG_73="                --ssl                     為此 app 啟用 SSL（需預先設定 DEMYX_DOMAIN 與 DEMYX_EMAIL）。"
export DMSG_74="                --ssl-wildcard            啟用萬用 SSL 憑證（須設定 DEMYX_CF_KEY）。"
export DMSG_75="                --stack                   設定 stack 類型，預設為 nginx-php。（用法：--stack=<bedrock|nginx-php|ols|ols-bedrock>）"
export DMSG_76="                --type                    設定 app 類型，預設為 wp。（用法：--type=<wp|php|html>）"
export DMSG_77="                --user|--username         設定自訂的管理使用者名稱。"
export DMSG_78="                --whitelist               啟用 IP 白名單。預設為 all。（用法：--whitelist=<all|login>）"
export DMSG_79="                --www                     為此 app 啟用 www 子網域支援。"
export DMSG_80="                -f                        若 app 已存在則跳過建立前確認。"
export DMSG_81="                echo"
export DMSG_82="               -f             刪除 app 時跳過確認提示。"
export DMSG_83="              -r                                  輸出原始資料（無格式化），不適用於憑證顯示。"
export DMSG_84="              all                     重新產生全部 app 的 .env 和 compose.yml 檔案。"
export DMSG_85="              all                 目標為所有關鍵 demyx container，支援 remove 與 restart。"
export DMSG_86="              code                    重新產生 code-server 的 compose.yml 與 .env 檔案。"
export DMSG_87="              cred|credentials                    產生使用者名稱、密碼和 htpasswd 並以表格方式顯示。"
export DMSG_88="              ctop                container 專用版的 htop（資源監控工具）。"
export DMSG_89="              down|rm|remove      停止並移除 demyx container。"
export DMSG_90="              edit                在主機上編輯 Demyx 設定檔（~/.demyx）"
export DMSG_91="              env                 顯示 Demyx container 中的 .env 內容。"
export DMSG_92="              htpasswd                            產生 htpasswd 雜湊密碼。（用法：demyx utility htpasswd <使用者名稱> <密碼>）"
export DMSG_93="              id                                  產生隨機的 alphanumeric ID，預設為 5 個字元。（用法：demyx utility id <長度>）"
export DMSG_94="              pass|password                       產生隨機密碼，預設為 20 個字元。（用法：demyx utility password <長度>）"
export DMSG_95="              rs|restart          停止、移除並重新啟動 demyx container。"
export DMSG_96="              sh|shell                            開啟 demyx/utilities container 的 shell（預設為 bash）。（用法：demyx utility shell <指令>）"
export DMSG_97="              traefik                 重新產生 traefik 服務用的 compose.yml 並備份 acme.json。"
export DMSG_98="              up                  啟動核心 demyx container。"
export DMSG_99="              upgrade             拉取新版映像檔、更新 app 設定，並刪除舊映像檔。"
export DMSG_100="              user|username                       使用 demyx 的名稱產生器建立隨機使用者名稱。"
export DMSG_101="             -i               僅更新映像快取（略過輔助腳本更新）。"
export DMSG_102="             -l               列出所有 Demyx 映像檔，包含本地與遠端版本。若有更新將顯示 (NEW) 標示。"
export DMSG_103="             all                                      以迴圈方式設定所有 app。"
export DMSG_104="             all                      以迴圈方式備份所有 app。"
export DMSG_105="             traefik                  備份 Traefik 的 acme.json 與 compose.yml 檔案。"
export DMSG_106="            echo"
export DMSG_107="           all                                    智慧拉取：只拉取本地已有的映像。"
export DMSG_108="           apps                   顯示所有已安裝的 app 數量與名稱。"
export DMSG_109="           browsersync"
export DMSG_110="           code               進入 code-server container 執行指令。若未指定將開啟 zsh。"
export DMSG_111="           code-server:bedrock"
export DMSG_112="           code-server:browse"
export DMSG_113="           code-server:openlitespeed"
export DMSG_114="           code-server:openlitespeed-bedrock"
export DMSG_115="           code-server:wp"
export DMSG_116="           ctop"
export DMSG_117="           daily              每日排程：系統備份、WordPress 備份、自動更新、日誌輪替。"
export DMSG_118="           demyx"
export DMSG_119="           docker-socket-proxy"
export DMSG_120="           five-minute        每 5 分鐘排程：應用程式與負載健康檢查。"
export DMSG_121="           hourly             每小時排程：磁碟健康檢查。"
export DMSG_122="           mariadb"
export DMSG_123="           minute             每分鐘排程：執行 custom minute script（若存在）。"
export DMSG_124="           nginx"
export DMSG_125="           openlitespeed"
export DMSG_126="           openlitespeed:bedrock"
export DMSG_127="           pma"
export DMSG_128="           redis"
export DMSG_129="           six-hour           每 6 小時排程：執行 custom six-hour script（若存在）。"
export DMSG_130="           ssh"
export DMSG_131="           system                 顯示系統資訊：構建版本、主機名、IP、app 數量、備份、磁碟空間、記憶體、運作時間、負載、container 數量。"
export DMSG_132="           traefik"
export DMSG_133="           traefik            進入 Traefik container 執行指令。若未指定將開啟 bash。"
export DMSG_134="           utilities"
export DMSG_135="           weekly             每週排程：系統更新。"
export DMSG_136="           wordpress"
export DMSG_137="           wordpress:bedrock"
export DMSG_138="          cron                            檢視 Demyx 排程（cron）日誌。"
export DMSG_139="          main                            檢視 Demyx 主日誌或錯誤日誌。"
export DMSG_140="          traefik                         檢視 Traefik 的 access 或 error log。"
export DMSG_141="         all                  從所有資料夾（html、php、wp）刪除所有 app。"
export DMSG_142="        echo"
export DMSG_143="      -v|--version|version    顯示 demyx 版本資訊。"
export DMSG_144="      backup                  備份應用程式，可選擇備份設定、資料庫或完整備份。"
export DMSG_145="      compose                 對指定 app container 執行 docker compose 指令。"
export DMSG_146="      config                  設定 app 的外觀與功能。"
export DMSG_147="      cp                      為 app container 產生 docker cp 指令。"
export DMSG_148="      cron                    手動執行排定的維護任務。"
export DMSG_149="      down                    等同 docker compose down 的捷徑指令。"
export DMSG_150="      edit                    用 nano 編輯 app 的 .env 檔案。"
export DMSG_151="      exec                    透過 shell 存取並執行 app container 指令。"
export DMSG_152="      healthcheck             執行 app 與系統健康檢查，並提供通知功能。"
export DMSG_153="      info                    顯示 app 環境變數與系統資訊，預設會顯示 DB 與 WP 的儲存資訊。"
export DMSG_154="      log                     顯示各類日誌，預設會追蹤 app 的 access log（最後 200 行）。"
export DMSG_155="      motd                    每日提示訊息（message of the day）。"
export DMSG_156="      pull                    抓取 Demyx 與第三方服務的 Docker 映像檔。"
export DMSG_157="      refresh                 重新產生 app 設定檔並備份原始設定。"
export DMSG_158="      restore                 從備份還原 app，包含 container 重建。"
export DMSG_159="      rm                      完整刪除應用程式：container、volume、設定檔皆清除。"
export DMSG_160="      run                     使用指定參數新建 WordPress 應用程式。"
export DMSG_161="      shell                       對 demyx container 執行指令，若無指定則開啟 bash shell。"
export DMSG_162="      smtp                    發送測試 Email 以驗證 SMTP 設定是否正確。"
export DMSG_163="      up                      等同 docker compose up -d 的捷徑。"
export DMSG_164="      update                  檢查與更新 Demyx 映像檔與 helper script。"
export DMSG_165="      util|utility            生成帳密或存取 Demyx Utilities container。"
export DMSG_166="      wp                      在 WordPress container 中執行 WP-CLI 指令。"
export DMSG_167="    echo"
export DMSG_168="- Bugs            https://demyx.sh/issues"
export DMSG_169="- Changelog       https://demyx.sh/changelog"
export DMSG_170="- Discord         https://demyx.sh/discord"
export DMSG_171="- Discussions     https://demyx.sh/discussions"
export DMSG_172="- Docs            https://demyx.sh/kb"
export DMSG_173="- IRC             https://demyx.sh/irc"
export DMSG_174=".5"
export DMSG_175="0"
export DMSG_176="Content-Type: text/html; charset=utf-8"
export DMSG_177="MIME-Version: 1.0"
export DMSG_178="堆疊追蹤（Stack Trace）："
export DMSG_179="使用者名稱      demyx"
export DMSG_180="歡迎使用 Demyx！若發現任何錯誤請回報。"
export DMSG_181="demyx <arg>                   Demyx 主指令，更多資訊請使用：demyx help <arg>"
export DMSG_182="demyx backup <app> <args>             備份指定的 app。"
export DMSG_183="demyx compose <app> <args> <docker compose args>      對指定 app 執行 docker compose 指令。"
export DMSG_184="demyx config <app> <args>                             設定特定 app。"
export DMSG_185="demyx cp <app>    建立 docker cp 指令，用來將檔案複製到/自 app container。"
export DMSG_186="demyx cron <arg>              手動執行 demyx 的排程任務。"
export DMSG_187="demyx down <app>        等同 docker compose down 的捷徑指令。"
export DMSG_188="demyx edit <app>      <args>          在 Demyx container 中使用 nano 編輯 app 的 .env 檔案。"
export DMSG_189="demyx exec <app> <args>       在 WordPress container 中執行指令。若未指定則開啟 bash shell。"
export DMSG_190="demyx healthcheck <args>      主要用於 demyx cron，自行執行也可。若沒輸出即表示一切正常。要啟用通知，請透過 demyx host edit 設定 DEMYX_MATRIX 與 DEMYX_SMTP。"
export DMSG_191="demyx healthcheck app         檢查是否有 app container 停止。若有失敗會顯示 docker logs 與相關日誌。"
export DMSG_192="demyx healthcheck disk        檢查磁碟使用率並顯示 df 結果。若高於 DEMYX_HEALTHCHECK_DISK_THRESHOLD 將發送通知。"
export DMSG_193="demyx healthcheck load        檢查系統平均負載，顯示 top 與 container 資訊。若 5 分鐘平均過高，將通知。"
export DMSG_194="demyx host    <args>              Demyx 協助指令集"
export DMSG_195="demyx info <app>      <args>      顯示 app 的環境變數與 volume 容量，預設顯示 DB 與 WP 資訊。"
export DMSG_196="demyx log <app>           <args>          檢視各種日誌。預設顯示 access log（最後 200 行）。"
export DMSG_197="demyx motd"
export DMSG_198="demyx motd"
export DMSG_199="demyx pull <args>                                 抓取映像檔。使用 'all' 可抓取所有 Demyx 與第三方映像。"
export DMSG_200="demyx refresh <app>       <args>      重新產生 compose.yml 和 .env 檔案，預設會備份設定。"
export DMSG_201="demyx restore <app>       <args>        從備份還原 app。若 app 已存在會先刪除。"
export DMSG_202="demyx restore traefik                   還原 Traefik 的 acme.json 與 compose.yml 檔案。"
export DMSG_203="demyx rm <app> <args>         完整刪除 app：container、volume、設定檔皆清除。"
export DMSG_204="demyx run <app> <args>                    建立新的 WordPress app 並套用指定設定。"
export DMSG_205="demyx smtp        測試 SMTP 是否設定正確，成功將發送一封郵件。"
export DMSG_206="demyx up <app>        等同 docker compose up -d 的捷徑。"
export DMSG_207="demyx update <args>           檢查並更新 Demyx 的映像與協助腳本。"
export DMSG_208="demyx utility <type>              <args>          建立帳密或使用 Demyx 公用工具 container。"
export DMSG_209="demyx wp <app> <args>     在 WordPress container 中執行 WP-CLI 指令。"
export DMSG_210="demyx wp all <args>       對所有 WordPress app 執行 WP-CLI 指令。錯誤的 app 會略過。"
export DMSG_211="external: true"
export DMSG_212="true"
export DMSG_213="{"
export DMSG_214="}"
